{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "77477a10",
   "metadata": {
    "papermill": {
     "duration": 0.002995,
     "end_time": "2025-04-20T19:51:07.526673",
     "exception": false,
     "start_time": "2025-04-20T19:51:07.523678",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Survival Analysis with Machine Learning in Kaggle (COVID-19 Survival Dataset)\n",
    "\n",
    "## Default Kaggle Setup\n",
    " Purpose: Use the pre-installed tidyverse package and check input files.\n",
    " \n",
    " Why: Kaggle's R environment provides tidyverse (including dplyr, ggplot2) by default,\n",
    "      and input data is available in ../input/. Listing files confirms the dataset's presence."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dffcc90c",
   "metadata": {
    "_execution_state": "idle",
    "_uuid": "051d70d956493feee0c6d64651c6a088724dca2a",
    "execution": {
     "iopub.execute_input": "2025-04-20T19:51:07.537802Z",
     "iopub.status.busy": "2025-04-20T19:51:07.535077Z",
     "iopub.status.idle": "2025-04-20T19:51:09.117662Z",
     "shell.execute_reply": "2025-04-20T19:51:09.115084Z"
    },
    "papermill": {
     "duration": 1.592749,
     "end_time": "2025-04-20T19:51:09.121947",
     "exception": false,
     "start_time": "2025-04-20T19:51:07.529198",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "── \u001b[1mAttaching core tidyverse packages\u001b[22m ──────────────────────── tidyverse 2.0.0 ──\n",
      "\u001b[32m✔\u001b[39m \u001b[34mdplyr    \u001b[39m 1.1.4     \u001b[32m✔\u001b[39m \u001b[34mreadr    \u001b[39m 2.1.5\n",
      "\u001b[32m✔\u001b[39m \u001b[34mforcats  \u001b[39m 1.0.0     \u001b[32m✔\u001b[39m \u001b[34mstringr  \u001b[39m 1.5.1\n",
      "\u001b[32m✔\u001b[39m \u001b[34mggplot2  \u001b[39m 3.5.1     \u001b[32m✔\u001b[39m \u001b[34mtibble   \u001b[39m 3.2.1\n",
      "\u001b[32m✔\u001b[39m \u001b[34mlubridate\u001b[39m 1.9.3     \u001b[32m✔\u001b[39m \u001b[34mtidyr    \u001b[39m 1.3.1\n",
      "\u001b[32m✔\u001b[39m \u001b[34mpurrr    \u001b[39m 1.0.2     \n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "── \u001b[1mConflicts\u001b[22m ────────────────────────────────────────── tidyverse_conflicts() ──\n",
      "\u001b[31m✖\u001b[39m \u001b[34mdplyr\u001b[39m::\u001b[32mfilter()\u001b[39m masks \u001b[34mstats\u001b[39m::filter()\n",
      "\u001b[31m✖\u001b[39m \u001b[34mdplyr\u001b[39m::\u001b[32mlag()\u001b[39m    masks \u001b[34mstats\u001b[39m::lag()\n",
      "\u001b[36mℹ\u001b[39m Use the conflicted package (\u001b[3m\u001b[34m<http://conflicted.r-lib.org/>\u001b[39m\u001b[23m) to force all conflicts to become errors\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "'covid19-survival-dataset'"
      ],
      "text/latex": [
       "'covid19-survival-dataset'"
      ],
      "text/markdown": [
       "'covid19-survival-dataset'"
      ],
      "text/plain": [
       "[1] \"covid19-survival-dataset\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# It is defined by the kaggle/rstats Docker image: https://github.com/kaggle/docker-rstats\n",
    "\n",
    "library(tidyverse) # metapackage of all tidyverse packages\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "list.files(path = \"../input\")\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b36a127",
   "metadata": {
    "papermill": {
     "duration": 0.002528,
     "end_time": "2025-04-20T19:51:09.127375",
     "exception": false,
     "start_time": "2025-04-20T19:51:09.124847",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Install and Load Additional Packages\n",
    "Purpose: Install and load packages for survival analysis and machine learning.\n",
    "\n",
    "Why: Kaggle's environment may not have specialized packages like randomForestSRC (for Random Survival Forests), gbm/xgboost (gradient boosting), survex (explainable AI), or keras/torch (neural networks). These are essential for the workflow."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "da19b922",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-20T19:51:09.170563Z",
     "iopub.status.busy": "2025-04-20T19:51:09.134529Z",
     "iopub.status.idle": "2025-04-20T20:14:13.038152Z",
     "shell.execute_reply": "2025-04-20T20:14:13.035856Z"
    },
    "papermill": {
     "duration": 1383.912007,
     "end_time": "2025-04-20T20:14:13.041891",
     "exception": false,
     "start_time": "2025-04-20T19:51:09.129884",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Installing packages into ‘/usr/local/lib/R/site-library’\n",
      "(as ‘lib’ is unspecified)\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Installing package into ‘/usr/local/lib/R/site-library’\n",
      "(as ‘lib’ is unspecified)\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Installing package into ‘/usr/local/lib/R/site-library’\n",
      "(as ‘lib’ is unspecified)\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      " randomForestSRC 3.3.3 \n",
      " \n",
      " Type rfsrc.news() to see new features, changes, and bug fixes. \n",
      " \n",
      "\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "Attaching package: ‘randomForestSRC’\n",
      "\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from ‘package:purrr’:\n",
      "\n",
      "    partial\n",
      "\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Loaded gbm 2.2.2\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "This version of gbm is no longer under development. Consider transitioning to gbm3, https://github.com/gbm-developers/gbm3\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "Attaching package: ‘xgboost’\n",
      "\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from ‘package:dplyr’:\n",
      "\n",
      "    slice\n",
      "\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "Attaching package: ‘survex’\n",
      "\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from ‘package:dplyr’:\n",
      "\n",
      "    explain\n",
      "\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Using Python: /usr/bin/python3.10\n",
      "Creating virtual environment 'r-tensorflow' ... \n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "+ /usr/bin/python3.10 -m venv /root/.virtualenvs/r-tensorflow\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Done!\n",
      "Installing packages: pip, wheel, setuptools\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "+ /root/.virtualenvs/r-tensorflow/bin/python -m pip install --upgrade pip wheel setuptools\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Virtual environment 'r-tensorflow' successfully created.\n",
      "Using virtual environment 'r-tensorflow' ...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "+ /root/.virtualenvs/r-tensorflow/bin/python -m pip install --upgrade --no-user 'tensorflow==2.15.*' tensorflow-hub tensorflow-datasets scipy requests Pillow h5py pandas pydot\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Installation complete.\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Packages loaded successfully!\n"
     ]
    }
   ],
   "source": [
    "install.packages(c(\"randomForestSRC\", \"gbm\", \"xgboost\", \"survex\"))\n",
    "install.packages(\"keras\")\n",
    "install.packages(\"torch\")\n",
    "library(survival)  # For survival functions (Surv object)\n",
    "library(randomForestSRC)  # Random Survival Forests\n",
    "library(gbm)  # Gradient Boosting\n",
    "library(xgboost)  # Alternative boosting (not used here but loaded for flexibility)\n",
    "library(keras)  # Neural networks\n",
    "library(torch)  # Neural networks (PyTorch backend)\n",
    "library(survex)  # Explainable AI\n",
    "# Configure keras and torch backends\n",
    "install_keras()  # Installs TensorFlow backend\n",
    "install_torch()  # Installs PyTorch backend\n",
    "cat(\"Packages loaded successfully!\\n\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2ffaa2ca",
   "metadata": {
    "papermill": {
     "duration": 0.00901,
     "end_time": "2025-04-20T20:14:13.059826",
     "exception": false,
     "start_time": "2025-04-20T20:14:13.050816",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Load and Preprocess Data\n",
    " \n",
    " Purpose: Load SurvivalCovid.csv and prepare it for analysis.\n",
    " \n",
    " Why: The dataset contains survival data (time, status, covariates) that needs cleaning\n",
    "      (e.g., handling missing values, converting status) and splitting into \n",
    "      training/testing\n",
    "      sets. Scaling numerical features ensures compatibility with neural networks and\n",
    "      gradient boosting, which performs better with standardised inputs."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "58cafe94",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-20T20:14:13.174596Z",
     "iopub.status.busy": "2025-04-20T20:14:13.172393Z",
     "iopub.status.idle": "2025-04-20T20:14:13.604261Z",
     "shell.execute_reply": "2025-04-20T20:14:13.602558Z"
    },
    "papermill": {
     "duration": 0.539098,
     "end_time": "2025-04-20T20:14:13.606689",
     "exception": false,
     "start_time": "2025-04-20T20:14:13.067591",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[1m\u001b[22mNew names:\n",
      "\u001b[36m•\u001b[39m `` -> `...1`\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[1mRows: \u001b[22m\u001b[34m228\u001b[39m \u001b[1mColumns: \u001b[22m\u001b[34m11\u001b[39m\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[36m──\u001b[39m \u001b[1mColumn specification\u001b[22m \u001b[36m────────────────────────────────────────────────────────\u001b[39m\n",
      "\u001b[1mDelimiter:\u001b[22m \",\"\n",
      "\u001b[32mdbl\u001b[39m (11): ...1, inst, time, status, age, sex, ph.ecog, ph.karno, pat.karno, ...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "\u001b[36mℹ\u001b[39m Use `spec()` to retrieve the full column specification for this data.\n",
      "\u001b[36mℹ\u001b[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spc_tbl_ [228 × 11] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n",
      " $ ...1     : num [1:228] 1 2 3 4 5 6 7 8 9 10 ...\n",
      " $ inst     : num [1:228] 3 3 3 5 1 12 7 11 1 7 ...\n",
      " $ time     : num [1:228] 306 455 1010 210 883 ...\n",
      " $ status   : num [1:228] 2 2 1 2 2 1 2 2 2 2 ...\n",
      " $ age      : num [1:228] 74 68 56 57 60 74 68 71 53 61 ...\n",
      " $ sex      : num [1:228] 1 1 1 1 1 1 2 2 1 1 ...\n",
      " $ ph.ecog  : num [1:228] 1 0 0 1 0 1 2 2 1 2 ...\n",
      " $ ph.karno : num [1:228] 90 90 90 90 100 50 70 60 70 70 ...\n",
      " $ pat.karno: num [1:228] 100 90 90 60 90 80 60 80 80 70 ...\n",
      " $ meal.cal : num [1:228] 1175 1225 NA 1150 NA ...\n",
      " $ wt.loss  : num [1:228] NA 15 15 11 0 0 10 1 16 34 ...\n",
      " - attr(*, \"spec\")=\n",
      "  .. cols(\n",
      "  ..   ...1 = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   inst = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   time = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   status = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   age = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   sex = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   ph.ecog = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   ph.karno = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   pat.karno = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   meal.cal = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   wt.loss = \u001b[32mcol_double()\u001b[39m\n",
      "  .. )\n",
      " - attr(*, \"problems\")=<externalptr> \n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "      ...1             inst            time            status     \n",
       " Min.   :  1.00   Min.   : 1.00   Min.   :   5.0   Min.   :1.000  \n",
       " 1st Qu.: 57.75   1st Qu.: 3.00   1st Qu.: 166.8   1st Qu.:1.000  \n",
       " Median :114.50   Median :11.00   Median : 255.5   Median :2.000  \n",
       " Mean   :114.50   Mean   :11.09   Mean   : 305.2   Mean   :1.724  \n",
       " 3rd Qu.:171.25   3rd Qu.:16.00   3rd Qu.: 396.5   3rd Qu.:2.000  \n",
       " Max.   :228.00   Max.   :33.00   Max.   :1022.0   Max.   :2.000  \n",
       "                  NA's   :1                                       \n",
       "      age             sex           ph.ecog          ph.karno     \n",
       " Min.   :39.00   Min.   :1.000   Min.   :0.0000   Min.   : 50.00  \n",
       " 1st Qu.:56.00   1st Qu.:1.000   1st Qu.:0.0000   1st Qu.: 75.00  \n",
       " Median :63.00   Median :1.000   Median :1.0000   Median : 80.00  \n",
       " Mean   :62.45   Mean   :1.395   Mean   :0.9515   Mean   : 81.94  \n",
       " 3rd Qu.:69.00   3rd Qu.:2.000   3rd Qu.:1.0000   3rd Qu.: 90.00  \n",
       " Max.   :82.00   Max.   :2.000   Max.   :3.0000   Max.   :100.00  \n",
       "                                 NA's   :1        NA's   :1       \n",
       "   pat.karno         meal.cal         wt.loss       \n",
       " Min.   : 30.00   Min.   :  96.0   Min.   :-24.000  \n",
       " 1st Qu.: 70.00   1st Qu.: 635.0   1st Qu.:  0.000  \n",
       " Median : 80.00   Median : 975.0   Median :  7.000  \n",
       " Mean   : 79.96   Mean   : 928.8   Mean   :  9.832  \n",
       " 3rd Qu.: 90.00   3rd Qu.:1150.0   3rd Qu.: 15.750  \n",
       " Max.   :100.00   Max.   :2600.0   Max.   : 68.000  \n",
       " NA's   :3        NA's   :47       NA's   :14       "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "library(readr)\n",
    "data <- read_csv(\"../input/covid19-survival-dataset/SurvivalCovid.csv\")  # Use read_csv from tidyverse\n",
    "# Inspect data to confirm structure\n",
    "str(data)\n",
    "summary(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ddf72497",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-20T20:14:13.619947Z",
     "iopub.status.busy": "2025-04-20T20:14:13.618339Z",
     "iopub.status.idle": "2025-04-20T20:14:37.631538Z",
     "shell.execute_reply": "2025-04-20T20:14:37.629513Z"
    },
    "papermill": {
     "duration": 24.023148,
     "end_time": "2025-04-20T20:14:37.634383",
     "exception": false,
     "start_time": "2025-04-20T20:14:13.611235",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Installing package into ‘/usr/local/lib/R/site-library’\n",
      "(as ‘lib’ is unspecified)\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Remove rows with missing values for simplicity\n",
    "install.packages(\"dplyr\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7cc90906",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-20T20:14:37.653967Z",
     "iopub.status.busy": "2025-04-20T20:14:37.652306Z",
     "iopub.status.idle": "2025-04-20T20:14:37.711337Z",
     "shell.execute_reply": "2025-04-20T20:14:37.708750Z"
    },
    "papermill": {
     "duration": 0.072481,
     "end_time": "2025-04-20T20:14:37.714750",
     "exception": false,
     "start_time": "2025-04-20T20:14:37.642269",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A tibble: 6 × 11</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>...1</th><th scope=col>inst</th><th scope=col>time</th><th scope=col>status</th><th scope=col>age</th><th scope=col>sex</th><th scope=col>ph.ecog</th><th scope=col>ph.karno</th><th scope=col>pat.karno</th><th scope=col>meal.cal</th><th scope=col>wt.loss</th></tr>\n",
       "\t<tr><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>2</td><td> 3</td><td> 455</td><td>2</td><td>68</td><td>1</td><td>0</td><td>90</td><td>90</td><td>1225</td><td>15</td></tr>\n",
       "\t<tr><td>4</td><td> 5</td><td> 210</td><td>2</td><td>57</td><td>1</td><td>1</td><td>90</td><td>60</td><td>1150</td><td>11</td></tr>\n",
       "\t<tr><td>6</td><td>12</td><td>1022</td><td>1</td><td>74</td><td>1</td><td>1</td><td>50</td><td>80</td><td> 513</td><td> 0</td></tr>\n",
       "\t<tr><td>7</td><td> 7</td><td> 310</td><td>2</td><td>68</td><td>2</td><td>2</td><td>70</td><td>60</td><td> 384</td><td>10</td></tr>\n",
       "\t<tr><td>8</td><td>11</td><td> 361</td><td>2</td><td>71</td><td>2</td><td>2</td><td>60</td><td>80</td><td> 538</td><td> 1</td></tr>\n",
       "\t<tr><td>9</td><td> 1</td><td> 218</td><td>2</td><td>53</td><td>1</td><td>1</td><td>70</td><td>80</td><td> 825</td><td>16</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A tibble: 6 × 11\n",
       "\\begin{tabular}{lllllllllll}\n",
       " ...1 & inst & time & status & age & sex & ph.ecog & ph.karno & pat.karno & meal.cal & wt.loss\\\\\n",
       " <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl>\\\\\n",
       "\\hline\n",
       "\t 2 &  3 &  455 & 2 & 68 & 1 & 0 & 90 & 90 & 1225 & 15\\\\\n",
       "\t 4 &  5 &  210 & 2 & 57 & 1 & 1 & 90 & 60 & 1150 & 11\\\\\n",
       "\t 6 & 12 & 1022 & 1 & 74 & 1 & 1 & 50 & 80 &  513 &  0\\\\\n",
       "\t 7 &  7 &  310 & 2 & 68 & 2 & 2 & 70 & 60 &  384 & 10\\\\\n",
       "\t 8 & 11 &  361 & 2 & 71 & 2 & 2 & 60 & 80 &  538 &  1\\\\\n",
       "\t 9 &  1 &  218 & 2 & 53 & 1 & 1 & 70 & 80 &  825 & 16\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A tibble: 6 × 11\n",
       "\n",
       "| ...1 &lt;dbl&gt; | inst &lt;dbl&gt; | time &lt;dbl&gt; | status &lt;dbl&gt; | age &lt;dbl&gt; | sex &lt;dbl&gt; | ph.ecog &lt;dbl&gt; | ph.karno &lt;dbl&gt; | pat.karno &lt;dbl&gt; | meal.cal &lt;dbl&gt; | wt.loss &lt;dbl&gt; |\n",
       "|---|---|---|---|---|---|---|---|---|---|---|\n",
       "| 2 |  3 |  455 | 2 | 68 | 1 | 0 | 90 | 90 | 1225 | 15 |\n",
       "| 4 |  5 |  210 | 2 | 57 | 1 | 1 | 90 | 60 | 1150 | 11 |\n",
       "| 6 | 12 | 1022 | 1 | 74 | 1 | 1 | 50 | 80 |  513 |  0 |\n",
       "| 7 |  7 |  310 | 2 | 68 | 2 | 2 | 70 | 60 |  384 | 10 |\n",
       "| 8 | 11 |  361 | 2 | 71 | 2 | 2 | 60 | 80 |  538 |  1 |\n",
       "| 9 |  1 |  218 | 2 | 53 | 1 | 1 | 70 | 80 |  825 | 16 |\n",
       "\n"
      ],
      "text/plain": [
       "  ...1 inst time status age sex ph.ecog ph.karno pat.karno meal.cal wt.loss\n",
       "1 2     3    455 2      68  1   0       90       90        1225     15     \n",
       "2 4     5    210 2      57  1   1       90       60        1150     11     \n",
       "3 6    12   1022 1      74  1   1       50       80         513      0     \n",
       "4 7     7    310 2      68  2   2       70       60         384     10     \n",
       "5 8    11    361 2      71  2   2       60       80         538      1     \n",
       "6 9     1    218 2      53  1   1       70       80         825     16     "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "library(dplyr)\n",
    "data_cleaned <- data %>% \n",
    "drop_na()# tidyverse equivalent of na.omit\n",
    "head(data_cleaned)"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 1329079,
     "sourceId": 2213138,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30749,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "r",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "R",
   "language": "R",
   "name": "ir"
  },
  "language_info": {
   "codemirror_mode": "r",
   "file_extension": ".r",
   "mimetype": "text/x-r-source",
   "name": "R",
   "pygments_lexer": "r",
   "version": "4.4.0"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 1414.511543,
   "end_time": "2025-04-20T20:14:38.046491",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-04-20T19:51:03.534948",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
