{"metadata":{"kernelspec":{"name":"ir","display_name":"R","language":"R"},"language_info":{"name":"R","codemirror_mode":"r","pygments_lexer":"r","mimetype":"text/x-r-source","file_extension":".r","version":"4.4.0"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":2213138,"sourceType":"datasetVersion","datasetId":1329079}],"dockerImageVersionId":30749,"isInternetEnabled":true,"language":"r","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Survival Analysis with Machine Learning in Kaggle (COVID-19 Survival Dataset)\n\n## Default Kaggle Setup\n Purpose: Use the pre-installed tidyverse package and check input files.\n \n Why: Kaggle's R environment provides tidyverse (including dplyr, ggplot2) by default,\n      and input data is available in ../input/. Listing files confirms the dataset's presence.","metadata":{}},{"cell_type":"code","source":"\n# It is defined by the kaggle/rstats Docker image: https://github.com/kaggle/docker-rstats\n\nlibrary(tidyverse) # metapackage of all tidyverse packages\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nlist.files(path = \"../input\")\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"051d70d956493feee0c6d64651c6a088724dca2a","_execution_state":"idle","trusted":true,"execution":{"iopub.status.busy":"2025-04-21T09:22:50.707813Z","iopub.execute_input":"2025-04-21T09:22:50.709620Z","iopub.status.idle":"2025-04-21T09:22:51.930061Z","shell.execute_reply":"2025-04-21T09:22:51.928355Z"}},"outputs":[{"name":"stderr","text":"── \u001b[1mAttaching core tidyverse packages\u001b[22m ──────────────────────── tidyverse 2.0.0 ──\n\u001b[32m✔\u001b[39m \u001b[34mdplyr    \u001b[39m 1.1.4     \u001b[32m✔\u001b[39m \u001b[34mreadr    \u001b[39m 2.1.5\n\u001b[32m✔\u001b[39m \u001b[34mforcats  \u001b[39m 1.0.0     \u001b[32m✔\u001b[39m \u001b[34mstringr  \u001b[39m 1.5.1\n\u001b[32m✔\u001b[39m \u001b[34mggplot2  \u001b[39m 3.5.1     \u001b[32m✔\u001b[39m \u001b[34mtibble   \u001b[39m 3.2.1\n\u001b[32m✔\u001b[39m \u001b[34mlubridate\u001b[39m 1.9.3     \u001b[32m✔\u001b[39m \u001b[34mtidyr    \u001b[39m 1.3.1\n\u001b[32m✔\u001b[39m \u001b[34mpurrr    \u001b[39m 1.0.2     \n── \u001b[1mConflicts\u001b[22m ────────────────────────────────────────── tidyverse_conflicts() ──\n\u001b[31m✖\u001b[39m \u001b[34mdplyr\u001b[39m::\u001b[32mfilter()\u001b[39m masks \u001b[34mstats\u001b[39m::filter()\n\u001b[31m✖\u001b[39m \u001b[34mdplyr\u001b[39m::\u001b[32mlag()\u001b[39m    masks \u001b[34mstats\u001b[39m::lag()\n\u001b[36mℹ\u001b[39m Use the conflicted package (\u001b[3m\u001b[34m<http://conflicted.r-lib.org/>\u001b[39m\u001b[23m) to force all conflicts to become errors\n","output_type":"stream"},{"output_type":"display_data","data":{"text/html":"'covid19-survival-dataset'","text/markdown":"'covid19-survival-dataset'","text/latex":"'covid19-survival-dataset'","text/plain":"[1] \"covid19-survival-dataset\""},"metadata":{}}],"execution_count":1},{"cell_type":"markdown","source":"## Install and Load Additional Packages\nPurpose: Install and load packages for survival analysis and machine learning.\n\nWhy: Kaggle's environment may not have specialized packages like randomForestSRC (for Random Survival Forests), gbm/xgboost (gradient boosting), survex (explainable AI), or keras/torch (neural networks). These are essential for the workflow.","metadata":{}},{"cell_type":"code","source":"install.packages(c(\"randomForestSRC\", \"gbm\", \"xgboost\", \"survex\"))\ninstall.packages(\"keras\")\ninstall.packages(\"torch\")\nlibrary(survival)  # For survival functions (Surv object)\nlibrary(randomForestSRC)  # Random Survival Forests\nlibrary(gbm)  # Gradient Boosting\nlibrary(xgboost)  # Alternative boosting (not used here but loaded for flexibility)\nlibrary(keras)  # Neural networks\nlibrary(torch)  # Neural networks (PyTorch backend)\nlibrary(survex)  # Explainable AI\n# Configure keras and torch backends\ninstall_keras()  # Installs TensorFlow backend\ninstall_torch()  # Installs PyTorch backend\ncat(\"Packages loaded successfully!\\n\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-21T09:22:51.940252Z","iopub.execute_input":"2025-04-21T09:22:51.969385Z","iopub.status.idle":"2025-04-21T09:43:47.372190Z","shell.execute_reply":"2025-04-21T09:43:47.370304Z"}},"outputs":[{"name":"stderr","text":"Installing packages into ‘/usr/local/lib/R/site-library’\n(as ‘lib’ is unspecified)\n\nInstalling package into ‘/usr/local/lib/R/site-library’\n(as ‘lib’ is unspecified)\n\nInstalling package into ‘/usr/local/lib/R/site-library’\n(as ‘lib’ is unspecified)\n\n\n randomForestSRC 3.3.3 \n \n Type rfsrc.news() to see new features, changes, and bug fixes. \n \n\n\n\nAttaching package: ‘randomForestSRC’\n\n\nThe following object is masked from ‘package:purrr’:\n\n    partial\n\n\nLoaded gbm 2.2.2\n\nThis version of gbm is no longer under development. Consider transitioning to gbm3, https://github.com/gbm-developers/gbm3\n\n\nAttaching package: ‘xgboost’\n\n\nThe following object is masked from ‘package:dplyr’:\n\n    slice\n\n\n\nAttaching package: ‘survex’\n\n\nThe following object is masked from ‘package:dplyr’:\n\n    explain\n\n\n","output_type":"stream"},{"name":"stdout","text":"Using Python: /usr/bin/python3.10\nCreating virtual environment 'r-tensorflow' ... \n","output_type":"stream"},{"name":"stderr","text":"+ /usr/bin/python3.10 -m venv /root/.virtualenvs/r-tensorflow\n\n","output_type":"stream"},{"name":"stdout","text":"Done!\nInstalling packages: pip, wheel, setuptools\n","output_type":"stream"},{"name":"stderr","text":"+ /root/.virtualenvs/r-tensorflow/bin/python -m pip install --upgrade pip wheel setuptools\n\n","output_type":"stream"},{"name":"stdout","text":"Virtual environment 'r-tensorflow' successfully created.\nUsing virtual environment 'r-tensorflow' ...\n","output_type":"stream"},{"name":"stderr","text":"+ /root/.virtualenvs/r-tensorflow/bin/python -m pip install --upgrade --no-user 'tensorflow==2.15.*' tensorflow-hub tensorflow-datasets scipy requests Pillow h5py pandas pydot\n\n","output_type":"stream"},{"name":"stdout","text":"\nInstallation complete.\n\nPackages loaded successfully!\n","output_type":"stream"}],"execution_count":2},{"cell_type":"markdown","source":"## Load and Preprocess Data\n \n Purpose: Load SurvivalCovid.csv and prepare it for analysis.\n \n Why: The dataset contains survival data (time, status, covariates) that needs cleaning\n      (e.g., handling missing values, converting status) and splitting into \n      training/testing\n      sets. Scaling numerical features ensures compatibility with neural networks and\n      gradient boosting, which performs better with standardised inputs.","metadata":{}},{"cell_type":"code","source":"library(readr)\ndata <- read_csv(\"../input/covid19-survival-dataset/SurvivalCovid.csv\")  # Use read_csv from tidyverse\n# Inspect data to confirm structure\nstr(data)\nsummary(data)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-21T09:44:17.904255Z","iopub.execute_input":"2025-04-21T09:44:17.905882Z","iopub.status.idle":"2025-04-21T09:44:18.037802Z","shell.execute_reply":"2025-04-21T09:44:18.035844Z"}},"outputs":[{"name":"stderr","text":"\u001b[1m\u001b[22mNew names:\n\u001b[36m•\u001b[39m `` -> `...1`\n\u001b[1mRows: \u001b[22m\u001b[34m228\u001b[39m \u001b[1mColumns: \u001b[22m\u001b[34m11\u001b[39m\n\u001b[36m──\u001b[39m \u001b[1mColumn specification\u001b[22m \u001b[36m────────────────────────────────────────────────────────\u001b[39m\n\u001b[1mDelimiter:\u001b[22m \",\"\n\u001b[32mdbl\u001b[39m (11): ...1, inst, time, status, age, sex, ph.ecog, ph.karno, pat.karno, ...\n\n\u001b[36mℹ\u001b[39m Use `spec()` to retrieve the full column specification for this data.\n\u001b[36mℹ\u001b[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n","output_type":"stream"},{"name":"stdout","text":"spc_tbl_ [228 × 11] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ...1     : num [1:228] 1 2 3 4 5 6 7 8 9 10 ...\n $ inst     : num [1:228] 3 3 3 5 1 12 7 11 1 7 ...\n $ time     : num [1:228] 306 455 1010 210 883 ...\n $ status   : num [1:228] 2 2 1 2 2 1 2 2 2 2 ...\n $ age      : num [1:228] 74 68 56 57 60 74 68 71 53 61 ...\n $ sex      : num [1:228] 1 1 1 1 1 1 2 2 1 1 ...\n $ ph.ecog  : num [1:228] 1 0 0 1 0 1 2 2 1 2 ...\n $ ph.karno : num [1:228] 90 90 90 90 100 50 70 60 70 70 ...\n $ pat.karno: num [1:228] 100 90 90 60 90 80 60 80 80 70 ...\n $ meal.cal : num [1:228] 1175 1225 NA 1150 NA ...\n $ wt.loss  : num [1:228] NA 15 15 11 0 0 10 1 16 34 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ...1 = \u001b[32mcol_double()\u001b[39m,\n  ..   inst = \u001b[32mcol_double()\u001b[39m,\n  ..   time = \u001b[32mcol_double()\u001b[39m,\n  ..   status = \u001b[32mcol_double()\u001b[39m,\n  ..   age = \u001b[32mcol_double()\u001b[39m,\n  ..   sex = \u001b[32mcol_double()\u001b[39m,\n  ..   ph.ecog = \u001b[32mcol_double()\u001b[39m,\n  ..   ph.karno = \u001b[32mcol_double()\u001b[39m,\n  ..   pat.karno = \u001b[32mcol_double()\u001b[39m,\n  ..   meal.cal = \u001b[32mcol_double()\u001b[39m,\n  ..   wt.loss = \u001b[32mcol_double()\u001b[39m\n  .. )\n - attr(*, \"problems\")=<externalptr> \n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"      ...1             inst            time            status     \n Min.   :  1.00   Min.   : 1.00   Min.   :   5.0   Min.   :1.000  \n 1st Qu.: 57.75   1st Qu.: 3.00   1st Qu.: 166.8   1st Qu.:1.000  \n Median :114.50   Median :11.00   Median : 255.5   Median :2.000  \n Mean   :114.50   Mean   :11.09   Mean   : 305.2   Mean   :1.724  \n 3rd Qu.:171.25   3rd Qu.:16.00   3rd Qu.: 396.5   3rd Qu.:2.000  \n Max.   :228.00   Max.   :33.00   Max.   :1022.0   Max.   :2.000  \n                  NA's   :1                                       \n      age             sex           ph.ecog          ph.karno     \n Min.   :39.00   Min.   :1.000   Min.   :0.0000   Min.   : 50.00  \n 1st Qu.:56.00   1st Qu.:1.000   1st Qu.:0.0000   1st Qu.: 75.00  \n Median :63.00   Median :1.000   Median :1.0000   Median : 80.00  \n Mean   :62.45   Mean   :1.395   Mean   :0.9515   Mean   : 81.94  \n 3rd Qu.:69.00   3rd Qu.:2.000   3rd Qu.:1.0000   3rd Qu.: 90.00  \n Max.   :82.00   Max.   :2.000   Max.   :3.0000   Max.   :100.00  \n                                 NA's   :1        NA's   :1       \n   pat.karno         meal.cal         wt.loss       \n Min.   : 30.00   Min.   :  96.0   Min.   :-24.000  \n 1st Qu.: 70.00   1st Qu.: 635.0   1st Qu.:  0.000  \n Median : 80.00   Median : 975.0   Median :  7.000  \n Mean   : 79.96   Mean   : 928.8   Mean   :  9.832  \n 3rd Qu.: 90.00   3rd Qu.:1150.0   3rd Qu.: 15.750  \n Max.   :100.00   Max.   :2600.0   Max.   : 68.000  \n NA's   :3        NA's   :47       NA's   :14       "},"metadata":{}}],"execution_count":7},{"cell_type":"code","source":"# Remove rows with missing values for simplicity\ninstall.packages(\"dplyr\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-21T09:43:47.756757Z","iopub.execute_input":"2025-04-21T09:43:47.758289Z","iopub.status.idle":"2025-04-21T09:44:08.864964Z","shell.execute_reply":"2025-04-21T09:44:08.863106Z"}},"outputs":[{"name":"stderr","text":"Installing package into ‘/usr/local/lib/R/site-library’\n(as ‘lib’ is unspecified)\n\n","output_type":"stream"}],"execution_count":4},{"cell_type":"code","source":"library(dplyr)\ndata_cleaned <- data %>% \ndrop_na()# tidyverse equivalent of na.omit\nhead(data_cleaned)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-21T09:44:08.868858Z","iopub.execute_input":"2025-04-21T09:44:08.870738Z","iopub.status.idle":"2025-04-21T09:44:08.969433Z","shell.execute_reply":"2025-04-21T09:44:08.930269Z"}},"outputs":[{"output_type":"display_data","data":{"text/html":"<table class=\"dataframe\">\n<caption>A tibble: 6 × 11</caption>\n<thead>\n\t<tr><th scope=col>...1</th><th scope=col>inst</th><th scope=col>time</th><th scope=col>status</th><th scope=col>age</th><th scope=col>sex</th><th scope=col>ph.ecog</th><th scope=col>ph.karno</th><th scope=col>pat.karno</th><th scope=col>meal.cal</th><th scope=col>wt.loss</th></tr>\n\t<tr><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n</thead>\n<tbody>\n\t<tr><td>2</td><td> 3</td><td> 455</td><td>2</td><td>68</td><td>1</td><td>0</td><td>90</td><td>90</td><td>1225</td><td>15</td></tr>\n\t<tr><td>4</td><td> 5</td><td> 210</td><td>2</td><td>57</td><td>1</td><td>1</td><td>90</td><td>60</td><td>1150</td><td>11</td></tr>\n\t<tr><td>6</td><td>12</td><td>1022</td><td>1</td><td>74</td><td>1</td><td>1</td><td>50</td><td>80</td><td> 513</td><td> 0</td></tr>\n\t<tr><td>7</td><td> 7</td><td> 310</td><td>2</td><td>68</td><td>2</td><td>2</td><td>70</td><td>60</td><td> 384</td><td>10</td></tr>\n\t<tr><td>8</td><td>11</td><td> 361</td><td>2</td><td>71</td><td>2</td><td>2</td><td>60</td><td>80</td><td> 538</td><td> 1</td></tr>\n\t<tr><td>9</td><td> 1</td><td> 218</td><td>2</td><td>53</td><td>1</td><td>1</td><td>70</td><td>80</td><td> 825</td><td>16</td></tr>\n</tbody>\n</table>\n","text/markdown":"\nA tibble: 6 × 11\n\n| ...1 &lt;dbl&gt; | inst &lt;dbl&gt; | time &lt;dbl&gt; | status &lt;dbl&gt; | age &lt;dbl&gt; | sex &lt;dbl&gt; | ph.ecog &lt;dbl&gt; | ph.karno &lt;dbl&gt; | pat.karno &lt;dbl&gt; | meal.cal &lt;dbl&gt; | wt.loss &lt;dbl&gt; |\n|---|---|---|---|---|---|---|---|---|---|---|\n| 2 |  3 |  455 | 2 | 68 | 1 | 0 | 90 | 90 | 1225 | 15 |\n| 4 |  5 |  210 | 2 | 57 | 1 | 1 | 90 | 60 | 1150 | 11 |\n| 6 | 12 | 1022 | 1 | 74 | 1 | 1 | 50 | 80 |  513 |  0 |\n| 7 |  7 |  310 | 2 | 68 | 2 | 2 | 70 | 60 |  384 | 10 |\n| 8 | 11 |  361 | 2 | 71 | 2 | 2 | 60 | 80 |  538 |  1 |\n| 9 |  1 |  218 | 2 | 53 | 1 | 1 | 70 | 80 |  825 | 16 |\n\n","text/latex":"A tibble: 6 × 11\n\\begin{tabular}{lllllllllll}\n ...1 & inst & time & status & age & sex & ph.ecog & ph.karno & pat.karno & meal.cal & wt.loss\\\\\n <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl>\\\\\n\\hline\n\t 2 &  3 &  455 & 2 & 68 & 1 & 0 & 90 & 90 & 1225 & 15\\\\\n\t 4 &  5 &  210 & 2 & 57 & 1 & 1 & 90 & 60 & 1150 & 11\\\\\n\t 6 & 12 & 1022 & 1 & 74 & 1 & 1 & 50 & 80 &  513 &  0\\\\\n\t 7 &  7 &  310 & 2 & 68 & 2 & 2 & 70 & 60 &  384 & 10\\\\\n\t 8 & 11 &  361 & 2 & 71 & 2 & 2 & 60 & 80 &  538 &  1\\\\\n\t 9 &  1 &  218 & 2 & 53 & 1 & 1 & 70 & 80 &  825 & 16\\\\\n\\end{tabular}\n","text/plain":"  ...1 inst time status age sex ph.ecog ph.karno pat.karno meal.cal wt.loss\n1 2     3    455 2      68  1   0       90       90        1225     15     \n2 4     5    210 2      57  1   1       90       60        1150     11     \n3 6    12   1022 1      74  1   1       50       80         513      0     \n4 7     7    310 2      68  2   2       70       60         384     10     \n5 8    11    361 2      71  2   2       60       80         538      1     \n6 9     1    218 2      53  1   1       70       80         825     16     "},"metadata":{}}],"execution_count":5}]}